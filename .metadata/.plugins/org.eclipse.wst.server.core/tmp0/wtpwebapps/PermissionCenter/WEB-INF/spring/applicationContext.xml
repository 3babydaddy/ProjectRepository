<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:p="http://www.springframework.org/schema/p"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

 <import resource="springShiro.xml"/>
    <!-- enable component scanning -->
    <context:component-scan base-package="com.tf.base" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	<context:property-placeholder location="classpath:application.properties" />  
	  
	  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>logMessages</value>
            </list>
        </property>
    </bean>
	  
	 <bean id="permissionService" class="com.tf.base.permission.service.PermissionClientServiceImpl"/>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="filters" value="stat" />
		<property name="maxActive" value="10" />
		<property name="initialSize" value="5" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="false" />
		<property name="testOnBorrow" value="true" /> <!-- 防止mysql8小时问题 -->
		<property name="testOnReturn" value="false" />
	</bean>

	<!-- transactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- ####### jedis  config begain ##########-->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.maxActive}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWait" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>


	 <!-- redis的连接池pool，不是必选项：timeout/password  -->
    <bean id = "jedisPool" class="redis.clients.jedis.JedisPool">
      <constructor-arg index="0" ref="jedisPoolConfig"/>
      <constructor-arg index="1" value="${redis.host}"/>
      <constructor-arg index="2" value="${redis.port}" type="int"/>
      <!--timeout-->
      <constructor-arg index="3" value="${redis.timeout}"/>
      <constructor-arg index="4" value="${redis.password}"/>
    </bean>

	<!-- 下面是spring集成的redis -->
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:timeout="${redis.timeout}" p:password="${redis.password}"  p:pool-config-ref="jedisPoolConfig"/>  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean>       
	<!-- ####### jedis config  end  ###### -->
    
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	     <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage"
            value="com.tf.base.index.domain
            				,com.tf.base.system.domain
            				,com.tf.base.resource.domain
            				,com.tf.base.department.domain
            				,com.tf.base.common.domain
            				,com.tf.base.role.domain
            				,com.tf.base.user.domain
            				,com.tf.base.notification.domain"/>  
	</bean>  
	  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
            value="com.tf.base.index.persistence
            				,com.tf.base.system.persistence
            				,com.tf.base.resource.persistence
            				,com.tf.base.department.persistence
            				,com.tf.base.common.persistence
            				,com.tf.base.role.persistence
            				,com.tf.base.user.persistence
            				,com.tf.base.notification.persistence
            				,com.tf.base.log.persistence" />
    </bean>
 
    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <!-- enable aspectj -->
    <aop:aspectj-autoproxy />
</beans>
